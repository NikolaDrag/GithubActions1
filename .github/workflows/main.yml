name: Main workflow
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env: # Set the secret as an input
  docker_username: ${{ github.actor }} 
  docker_password: ${{ secrets.GITHUB_TOKEN }} #Nees to be set to be made available to the workflow
  GIT_COMMIT: ${{ github.sha }}
  DOCKER_REPO: ghcr.io/nikoladrag/micronaut-app
jobs:
  Build:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4       
      - run: ci/build-app.sh
      - name: Test
        run: ci/unit-test-app.sh
      - name: Upload repo
        uses: actions/upload-artifact@v4
        with:
          name: code
          path: .

  Linting:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Run linting
        uses: super-linter/super-linter/slim@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true
  Docker-image:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      packages: write
    env:  # Set DOCKER_REPO for the entire job
      DOCKER_REPO: ghcr.io/nikoladrag/micronaut-app # This is set to ensure it's in lowercase
      docker_username: ${{ github.actor }} # Pass username to the script as well
    steps:
        - name: Download code
          uses: actions/download-artifact@v4
          with:
            name: code
            path: .
        - name: Prepare Docker Username
          run: |
            # Convert the docker_username to lowercase
            echo "docker_username=${docker_username,,}" >> $GITHUB_ENV
        - name: build docker
          run: bash ci/build-docker.sh
        - name: push docker
          run: bash ci/push-docker.sh
  Component-test:
      runs-on: ubuntu-latest
      needs: Docker-image
      steps:
        - name: Prepare Docker Username
          run: |
              # Convert the docker_username to lowercase
              echo "docker_username=${docker_username,,}" >> $GITHUB_ENV
        - name: Download code
          uses: actions/download-artifact@v4
          with:
            name: code
            path: .
        - name: Execute component test
          run: bash ci/component-test.sh
  Performance-test:
    runs-on: ubuntu-latest
    needs: Docker-image
    steps:
    - name: Prepare Docker Username
      run: |
            # Convert the docker_username to lowercase
            echo "docker_username=${docker_username,,}" >> $GITHUB_ENV
    - name: Download code
      uses: actions/download-artifact@v4
      with:
        name: code
        path: .
    - name: Execute performance test
      run: bash ci/performance-test.sh
      
